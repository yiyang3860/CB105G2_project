---
version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.0.0
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:5.0.0
    hostname: kafka
    ports:
      - '9092:9092'
      - '29092:29092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://10.120.38.20:9092
      # Following line is needed for Kafka versions 0.11+
      # in case you run less than 3 Kafka brokers in your
      # cluster because the broker config
      # `offsets.topic.replication.factor` (default: 3)
      # is now enforced upon topic creation
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # command: bash -c "/etc/confluent/docker/run" && kafka-topics --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic test10

  yolov3:
    image: devanliang/yolov3:0.0.3
    depends_on: 
      - kafka
    links: 
      - kafka
    volumes:
      - ./yolov3start.sh:/root/darknet/yolov3start.sh
      - ./objresult:/root/darknet/objresult
      - ./objimage:/root/darknet/inputimg
    command: tail -f /dev/null

  mongo:
    image: mongo
    ports:
     - '27017:27017'
    volumes:
     - ./mongo:/data/db
     - ~/recipe:/recipe
  facerecog:
    image: x9340805/facerecog:0.0.4
    depends_on:
      - kafka
    links:
      - kafka
    volumes:
      - ./usr_info:/face/usr_info
  
  recipe:
    image: mei11535/recipe:0.0.2
    depends_on:
      - yolov3
    volumes:
      - ./objresult:/recipe/guess_new  
      - ./recipeoutput:/recipe/result
      - ./recipeoutputold:/recipe/guess_old
    
  mysql:
    image: mysql:8.0
    ports:
      - '3306:3306'
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: my-secret-pw
    
  redis:
    image: redis
    ports:
      - '6379:6379'
    volumes:
      - ./redis:/data
  
  sendtouser:
    image: yiyang3860/sendtouser:0.0.2
    volumes:
      - ./recipeoutputold:/sendtouser/recipeoutputold
      - ./usr_info:/sendtouser/usr_info
      - ./objresult:/sendtouser/objresult

  linebot:
    image: yiyang3860/linebot:0.0.1
    volumes:
      - ./material:/linebot/material
      - ./LineBotMenu.lbd:/linebot/LineBotMenu.lbd
    ports:
      - '8888:8888'
      - '80:5000'
    command: start-notebook.sh --NotebookApp.token=''
  
  serveo:
    image: jessefugitt/docker-autossh
    command: autossh -M 0 -g -N -o StrictHostKeyChecking=no -o ServerAliveInterval=5 -o ServerAliveCountMax=1 -i /root/.ssh/id_rsa -R cb10502.serveo.net:80:172.20.0.7:5000 serveo.net




